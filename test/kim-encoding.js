import {
    Buffer as _Buffer
} from 'node:buffer';
import _chai from 'isotropic-dev-dependencies/lib/chai.js';
import _kimEncoding from '../lib/kim-encoding.js';
import _mocha from 'isotropic-dev-dependencies/lib/mocha.js';

const _kimBase64StringByBigIntMap = new Map([[
        -1152921504606846976n,
        'gJCAgICAgICAAA=='
    ], [
        -1152921504606846975n,
        'gI//////////fw=='
    ], [
        -1100087778366101931n,
        'gI+ik4CYmoqzKw=='
    ], [
        -679891637638612258n,
        'gIm33br52dWKIg=='
    ], [
        -576460752303423488n,
        'gIiAgICAgICAAA=='
    ], [
        -576460752303423487n,
        'gIf/////////fw=='
    ], [
        -420196140727489673n,
        'gIXqtcWewLWpCQ=='
    ], [
        -288230376151711744n,
        'gISAgICAgICAAA=='
    ], [
        -288230376151711743n,
        'gIP/////////fw=='
    ], [
        -259695496911122585n,
        'gIPNp/XbmZ/hGQ=='
    ], [
        -160500643816367088n,
        'gIKdjc/Dp5XHcA=='
    ], [
        -144115188075855872n,
        'gIKAgICAgICAAA=='
    ], [
        -144115188075855871n,
        'gIH/////////fw=='
    ], [
        -99194853094755497n,
        'gIGwmqaX8oqZKQ=='
    ], [
        -72057594037927936n,
        'gIGAgICAgICAAA=='
    ], [
        -72057594037927935n,
        'gP////////9/'
    ], [
        -61305790721611591n,
        'gOzzqau1i65H'
    ], [
        -37889062373143906n,
        'gMOm/Oy8/upi'
    ], [
        -36028797018963968n,
        'gMCAgICAgIAA'
    ], [
        -36028797018963967n,
        'gL////////9/'
    ], [
        -23416728348467685n,
        'gKnMrL74jMNl'
    ], [
        -18014398509481984n,
        'gKCAgICAgIAA'
    ], [
        -18014398509481983n,
        'gJ////////9/'
    ], [
        -14472334024676221n,
        'gJna0K3E8qZ9'
    ], [
        -9007199254740992n,
        'gJCAgICAgIAA'
    ], [
        -9007199254740991n,
        'gI////////9/'
    ], [
        -8944394323791464n,
        'gI/x3JGzmpxo'
    ], [
        -5527939700884757n,
        'gIno9JyR2IoV'
    ], [
        -4503599627370496n,
        'gIiAgICAgIAA'
    ], [
        -4503599627370495n,
        'gIf///////9/'
    ], [
        -3416454622906707n,
        'gIaI5/WhwpJT'
    ], [
        -2251799813685248n,
        'gISAgICAgIAA'
    ], [
        -2251799813685247n,
        'gIP///////9/'
    ], [
        -2111485077978050n,
        'gIPgjKbwlfdC'
    ], [
        -1304969544928657n,
        'gIKo286xrJsR'
    ], [
        -1125899906842624n,
        'gIKAgICAgIAA'
    ], [
        -1125899906842623n,
        'gIH///////9/'
    ], [
        -806515533049393n,
        'gIG3sNi+6dwx'
    ], [
        -562949953421312n,
        'gIGAgICAgIAA'
    ], [
        -562949953421311n,
        'gP///////38='
    ], [
        -498454011879264n,
        'gPGq9fLCvmA='
    ], [
        -308061521170129n,
        'gMaF4synnVE='
    ], [
        -281474976710656n,
        'gMCAgICAgAA='
    ], [
        -281474976710655n,
        'gL///////38='
    ], [
        -190392490709135n,
        'gKulk6aboQ8='
    ], [
        -140737488355328n,
        'gKCAgICAgAA='
    ], [
        -140737488355327n,
        'gJ///////38='
    ], [
        -117669030460994n,
        'gJrgz6aL/EI='
    ], [
        -72723460248141n,
        'gJDExICPpE0='
    ], [
        -70368744177664n,
        'gJCAgICAgAA='
    ], [
        -70368744177663n,
        'gI///////38='
    ], [
        -44945570212853n,
        'gIqci6X813U='
    ], [
        -35184372088832n,
        'gIiAgICAgAA='
    ], [
        -35184372088831n,
        'gIf//////38='
    ], [
        -27777890035288n,
        'gIaouNqSzFg='
    ], [
        -17592186044416n,
        'gISAgICAgAA='
    ], [
        -17592186044415n,
        'gIP//////38='
    ], [
        -17167680177565n,
        'gIPz0svqix0='
    ], [
        -10610209857723n,
        'gIK05o6owTs='
    ], [
        -8796093022208n,
        'gIKAgICAgAA='
    ], [
        -8796093022207n,
        'gIH//////38='
    ], [
        -6557470319842n,
        'gIG+7L3ByWI='
    ], [
        -4398046511104n,
        'gIGAgICAgAA='
    ], [
        -4398046511103n,
        'gP//////fw=='
    ], [
        -4052739537881n,
        'gPX50Ob3WQ=='
    ], [
        -2504730781961n,
        'gMjy7NrSCQ=='
    ], [
        -2199023255552n,
        'gMCAgICAAA=='
    ], [
        -2199023255551n,
        'gL//////fw=='
    ], [
        -1548008755920n,
        'gK2G5IylUA=='
    ], [
        -1099511627776n,
        'gKCAgICAAA=='
    ], [
        -1099511627775n,
        'gJ//////fw=='
    ], [
        -956722026041n,
        'gJvsiM6sOQ=='
    ], [
        -591286729879n,
        'gJGa2735Fw=='
    ], [
        -549755813888n,
        'gJCAgICAAA=='
    ], [
        -549755813887n,
        'gI//////fw=='
    ], [
        -365435296162n,
        'gIrRrZCzIg=='
    ], [
        -274877906944n,
        'gIiAgICAAA=='
    ], [
        -274877906943n,
        'gIf/////fw=='
    ], [
        -225851433717n,
        'gIbJrq3FdQ=='
    ], [
        -139583862445n,
        'gISH/uLtLQ=='
    ], [
        -137438953472n,
        'gISAgICAAA=='
    ], [
        -137438953471n,
        'gIP/////fw=='
    ], [
        -86267571272n,
        'gILBr8rYSA=='
    ], [
        -68719476736n,
        'gIKAgICAAA=='
    ], [
        -68719476735n,
        'gIH/////fw=='
    ], [
        -53316291173n,
        'gIHGz5iUZQ=='
    ], [
        -34359738368n,
        'gIGAgICAAA=='
    ], [
        -34359738367n,
        'gP////9/'
    ], [
        -32951280099n,
        'gPrgssNj'
    ], [
        -20365011074n,
        'gMvu5dEC'
    ], [
        -17179869184n,
        'gMCAgIAA'
    ], [
        -17179869183n,
        'gL////9/'
    ], [
        -12586269025n,
        'gK7xzPJh'
    ], [
        -8589934592n,
        'gKCAgIAA'
    ], [
        -8589934591n,
        'gJ////9/'
    ], [
        -7778742049n,
        'gJz9mN4h'
    ], [
        -4807526976n,
        'gJH0tJRA'
    ], [
        -4294967296n,
        'gJCAgIAA'
    ], [
        -4294967295n,
        'gI////9/'
    ], [
        -2971215073n,
        'gIuI5Mlh'
    ], [
        -2147483648n,
        'gIiAgIAA'
    ], [
        -2147483647n,
        'gIf///9/'
    ], [
        -1836311903n,
        'gIbrz8pf'
    ], [
        -1134903170n,
        'gISdlP8C'
    ], [
        -1073741824n,
        'gISAgIAA'
    ], [
        -1073741823n,
        'gIP///9/'
    ], [
        -701408733n,
        'gILOustd'
    ], [
        -536870912n,
        'gIKAgIAA'
    ], [
        -536870911n,
        'gIH///9/'
    ], [
        -433494437n,
        'gIHO2rMl'
    ], [
        -268435456n,
        'gIGAgIAA'
    ], [
        -268435455n,
        'gP///38='
    ], [
        -267914296n,
        'gP/gmDg='
    ], [
        -165580141n,
        'gM76mm0='
    ], [
        -134217728n,
        'gMCAgAA='
    ], [
        -134217727n,
        'gL///38='
    ], [
        -102334155n,
        'gLDl/Us='
    ], [
        -67108864n,
        'gKCAgAA='
    ], [
        -67108863n,
        'gJ///38='
    ], [
        -63245986n,
        'gJ6UnSI='
    ], [
        -39088169n,
        'gJLR4Ck='
    ], [
        -33554432n,
        'gJCAgAA='
    ], [
        -33554431n,
        'gI///38='
    ], [
        -24157817n,
        'gIvCvHk='
    ], [
        -16777216n,
        'gIiAgAA='
    ], [
        -16777215n,
        'gIf//38='
    ], [
        -14930352n,
        'gIePozA='
    ], [
        -9227465n,
        'gISzmUk='
    ], [
        -8388608n,
        'gISAgAA='
    ], [
        -8388607n,
        'gIP//38='
    ], [
        -5702887n,
        'gILciWc='
    ], [
        -4194304n,
        'gIKAgAA='
    ], [
        -4194303n,
        'gIH//38='
    ], [
        -3524578n,
        'gIHXj2I='
    ], [
        -2178309n,
        'gIGE+gU='
    ], [
        -2097152n,
        'gIGAgAA='
    ], [
        -2097151n,
        'gP//fw=='
    ], [
        -1346269n,
        'gNKVXQ=='
    ], [
        -1048576n,
        'gMCAAA=='
    ], [
        -1048575n,
        'gL//fw=='
    ], [
        -832040n,
        'gLLkKA=='
    ], [
        -524288n,
        'gKCAAA=='
    ], [
        -524287n,
        'gJ//fw=='
    ], [
        -514229n,
        'gJ+xNQ=='
    ], [
        -317811n,
        'gJOycw=='
    ], [
        -262144n,
        'gJCAAA=='
    ], [
        -262143n,
        'gI//fw=='
    ], [
        -196418n,
        'gIv+Qg=='
    ], [
        -131072n,
        'gIiAAA=='
    ], [
        -131071n,
        'gIf/fw=='
    ], [
        -121393n,
        'gIe0MQ=='
    ], [
        -75025n,
        'gITKEQ=='
    ], [
        -65536n,
        'gISAAA=='
    ], [
        -65535n,
        'gIP/fw=='
    ], [
        -46368n,
        'gILqIA=='
    ], [
        -32768n,
        'gIKAAA=='
    ], [
        -32767n,
        'gIH/fw=='
    ], [
        -28657n,
        'gIHfcQ=='
    ], [
        -17711n,
        'gIGKLw=='
    ], [
        -16384n,
        'gIGAAA=='
    ], [
        -16383n,
        'gP9/'
    ], [
        -10946n,
        'gNVC'
    ], [
        -8192n,
        'gMAA'
    ], [
        -8191n,
        'gL9/'
    ], [
        -6765n,
        'gLRt'
    ], [
        -4181n,
        'gKBV'
    ], [
        -4096n,
        'gKAA'
    ], [
        -4095n,
        'gJ9/'
    ], [
        -2584n,
        'gJQY'
    ], [
        -2048n,
        'gJAA'
    ], [
        -2047n,
        'gI9/'
    ], [
        -1597n,
        'gIw9'
    ], [
        -1024n,
        'gIgA'
    ], [
        -1023n,
        'gId/'
    ], [
        -987n,
        'gIdb'
    ], [
        -610n,
        'gIRi'
    ], [
        -512n,
        'gIQA'
    ], [
        -511n,
        'gIN/'
    ], [
        -377n,
        'gIJ5'
    ], [
        -256n,
        'gIIA'
    ], [
        -255n,
        'gIF/'
    ], [
        -233n,
        'gIFp'
    ], [
        -144n,
        'gIEQ'
    ], [
        -128n,
        'gIEA'
    ], [
        -127n,
        'gH8='
    ], [
        -89n,
        'gFk='
    ], [
        -64n,
        'gEA='
    ], [
        -63n,
        'gD8='
    ], [
        -55n,
        'gDc='
    ], [
        -34n,
        'gCI='
    ], [
        -32n,
        'gCA='
    ], [
        -31n,
        'gB8='
    ], [
        -21n,
        'gBU='
    ], [
        -16n,
        'gBA='
    ], [
        -15n,
        'gA8='
    ], [
        -13n,
        'gA0='
    ], [
        -8n,
        'gAg='
    ], [
        -7n,
        'gAc='
    ], [
        -5n,
        'gAU='
    ], [
        -4n,
        'gAQ='
    ], [
        -3n,
        'gAM='
    ], [
        -2n,
        'gAI='
    ], [
        -1n,
        'gAE='
    ], [
        0n,
        'AA=='
    ], [
        1n,
        'AQ=='
    ], [
        2n,
        'Ag=='
    ], [
        3n,
        'Aw=='
    ], [
        4n,
        'BA=='
    ], [
        5n,
        'BQ=='
    ], [
        7n,
        'Bw=='
    ], [
        8n,
        'CA=='
    ], [
        13n,
        'DQ=='
    ], [
        15n,
        'Dw=='
    ], [
        16n,
        'EA=='
    ], [
        21n,
        'FQ=='
    ], [
        31n,
        'Hw=='
    ], [
        32n,
        'IA=='
    ], [
        34n,
        'Ig=='
    ], [
        55n,
        'Nw=='
    ], [
        63n,
        'Pw=='
    ], [
        64n,
        'QA=='
    ], [
        89n,
        'WQ=='
    ], [
        127n,
        'fw=='
    ], [
        128n,
        'gQA='
    ], [
        144n,
        'gRA='
    ], [
        233n,
        'gWk='
    ], [
        255n,
        'gX8='
    ], [
        256n,
        'ggA='
    ], [
        377n,
        'gnk='
    ], [
        511n,
        'g38='
    ], [
        512n,
        'hAA='
    ], [
        610n,
        'hGI='
    ], [
        987n,
        'h1s='
    ], [
        1023n,
        'h38='
    ], [
        1024n,
        'iAA='
    ], [
        1597n,
        'jD0='
    ], [
        2047n,
        'j38='
    ], [
        2048n,
        'kAA='
    ], [
        2584n,
        'lBg='
    ], [
        4095n,
        'n38='
    ], [
        4096n,
        'oAA='
    ], [
        4181n,
        'oFU='
    ], [
        6765n,
        'tG0='
    ], [
        8191n,
        'v38='
    ], [
        8192n,
        'wAA='
    ], [
        10946n,
        '1UI='
    ], [
        16383n,
        '/38='
    ], [
        16384n,
        'gYAA'
    ], [
        17711n,
        'gYov'
    ], [
        28657n,
        'gd9x'
    ], [
        32767n,
        'gf9/'
    ], [
        32768n,
        'goAA'
    ], [
        46368n,
        'guog'
    ], [
        65535n,
        'g/9/'
    ], [
        65536n,
        'hIAA'
    ], [
        75025n,
        'hMoR'
    ], [
        121393n,
        'h7Qx'
    ], [
        131071n,
        'h/9/'
    ], [
        131072n,
        'iIAA'
    ], [
        196418n,
        'i/5C'
    ], [
        262143n,
        'j/9/'
    ], [
        262144n,
        'kIAA'
    ], [
        317811n,
        'k7Jz'
    ], [
        514229n,
        'n7E1'
    ], [
        524287n,
        'n/9/'
    ], [
        524288n,
        'oIAA'
    ], [
        832040n,
        'suQo'
    ], [
        1048575n,
        'v/9/'
    ], [
        1048576n,
        'wIAA'
    ], [
        1346269n,
        '0pVd'
    ], [
        2097151n,
        '//9/'
    ], [
        2097152n,
        'gYCAAA=='
    ], [
        2178309n,
        'gYT6BQ=='
    ], [
        3524578n,
        'gdePYg=='
    ], [
        4194303n,
        'gf//fw=='
    ], [
        4194304n,
        'goCAAA=='
    ], [
        5702887n,
        'gtyJZw=='
    ], [
        8388607n,
        'g///fw=='
    ], [
        8388608n,
        'hICAAA=='
    ], [
        9227465n,
        'hLOZSQ=='
    ], [
        14930352n,
        'h4+jMA=='
    ], [
        16777215n,
        'h///fw=='
    ], [
        16777216n,
        'iICAAA=='
    ], [
        24157817n,
        'i8K8eQ=='
    ], [
        33554431n,
        'j///fw=='
    ], [
        33554432n,
        'kICAAA=='
    ], [
        39088169n,
        'ktHgKQ=='
    ], [
        63245986n,
        'npSdIg=='
    ], [
        67108863n,
        'n///fw=='
    ], [
        67108864n,
        'oICAAA=='
    ], [
        102334155n,
        'sOX9Sw=='
    ], [
        134217727n,
        'v///fw=='
    ], [
        134217728n,
        'wICAAA=='
    ], [
        165580141n,
        'zvqabQ=='
    ], [
        267914296n,
        '/+CYOA=='
    ], [
        268435455n,
        '////fw=='
    ], [
        268435456n,
        'gYCAgAA='
    ], [
        433494437n,
        'gc7asyU='
    ], [
        536870911n,
        'gf///38='
    ], [
        536870912n,
        'goCAgAA='
    ], [
        701408733n,
        'gs66y10='
    ], [
        1073741823n,
        'g////38='
    ], [
        1073741824n,
        'hICAgAA='
    ], [
        1134903170n,
        'hJ2U/wI='
    ], [
        1836311903n,
        'huvPyl8='
    ], [
        2147483647n,
        'h////38='
    ], [
        2147483648n,
        'iICAgAA='
    ], [
        2971215073n,
        'i4jkyWE='
    ], [
        4294967295n,
        'j////38='
    ], [
        4294967296n,
        'kICAgAA='
    ], [
        4807526976n,
        'kfS0lEA='
    ], [
        7778742049n,
        'nP2Y3iE='
    ], [
        8589934591n,
        'n////38='
    ], [
        8589934592n,
        'oICAgAA='
    ], [
        12586269025n,
        'rvHM8mE='
    ], [
        17179869183n,
        'v////38='
    ], [
        17179869184n,
        'wICAgAA='
    ], [
        20365011074n,
        'y+7l0QI='
    ], [
        32951280099n,
        '+uCyw2M='
    ], [
        34359738367n,
        '/////38='
    ], [
        34359738368n,
        'gYCAgIAA'
    ], [
        53316291173n,
        'gcbPmJRl'
    ], [
        68719476735n,
        'gf////9/'
    ], [
        68719476736n,
        'goCAgIAA'
    ], [
        86267571272n,
        'gsGvythI'
    ], [
        137438953471n,
        'g/////9/'
    ], [
        137438953472n,
        'hICAgIAA'
    ], [
        139583862445n,
        'hIf+4u0t'
    ], [
        225851433717n,
        'hsmurcV1'
    ], [
        274877906943n,
        'h/////9/'
    ], [
        274877906944n,
        'iICAgIAA'
    ], [
        365435296162n,
        'itGtkLMi'
    ], [
        549755813887n,
        'j/////9/'
    ], [
        549755813888n,
        'kICAgIAA'
    ], [
        591286729879n,
        'kZrbvfkX'
    ], [
        956722026041n,
        'm+yIzqw5'
    ], [
        1099511627775n,
        'n/////9/'
    ], [
        1099511627776n,
        'oICAgIAA'
    ], [
        1548008755920n,
        'rYbkjKVQ'
    ], [
        2199023255551n,
        'v/////9/'
    ], [
        2199023255552n,
        'wICAgIAA'
    ], [
        2504730781961n,
        'yPLs2tIJ'
    ], [
        4052739537881n,
        '9fnQ5vdZ'
    ], [
        4398046511103n,
        '//////9/'
    ], [
        4398046511104n,
        'gYCAgICAAA=='
    ], [
        6557470319842n,
        'gb7svcHJYg=='
    ], [
        8796093022207n,
        'gf//////fw=='
    ], [
        8796093022208n,
        'goCAgICAAA=='
    ], [
        10610209857723n,
        'grTmjqjBOw=='
    ], [
        17167680177565n,
        'g/PSy+qLHQ=='
    ], [
        17592186044415n,
        'g///////fw=='
    ], [
        17592186044416n,
        'hICAgICAAA=='
    ], [
        27777890035288n,
        'hqi42pLMWA=='
    ], [
        35184372088831n,
        'h///////fw=='
    ], [
        35184372088832n,
        'iICAgICAAA=='
    ], [
        44945570212853n,
        'ipyLpfzXdQ=='
    ], [
        70368744177663n,
        'j///////fw=='
    ], [
        70368744177664n,
        'kICAgICAAA=='
    ], [
        72723460248141n,
        'kMTEgI+kTQ=='
    ], [
        117669030460994n,
        'muDPpov8Qg=='
    ], [
        140737488355327n,
        'n///////fw=='
    ], [
        140737488355328n,
        'oICAgICAAA=='
    ], [
        190392490709135n,
        'q6WTppuhDw=='
    ], [
        281474976710655n,
        'v///////fw=='
    ], [
        281474976710656n,
        'wICAgICAAA=='
    ], [
        308061521170129n,
        'xoXizKedUQ=='
    ], [
        498454011879264n,
        '8ar18sK+YA=='
    ], [
        562949953421311n,
        '////////fw=='
    ], [
        562949953421312n,
        'gYCAgICAgAA='
    ], [
        806515533049393n,
        'gbew2L7p3DE='
    ], [
        1125899906842623n,
        'gf///////38='
    ], [
        1125899906842624n,
        'goCAgICAgAA='
    ], [
        1304969544928657n,
        'gqjbzrGsmxE='
    ], [
        2111485077978050n,
        'g+CMpvCV90I='
    ], [
        2251799813685247n,
        'g////////38='
    ], [
        2251799813685248n,
        'hICAgICAgAA='
    ], [
        3416454622906707n,
        'hojn9aHCklM='
    ], [
        4503599627370495n,
        'h////////38='
    ], [
        4503599627370496n,
        'iICAgICAgAA='
    ], [
        5527939700884757n,
        'iej0nJHYihU='
    ], [
        8944394323791464n,
        'j/HckbOanGg='
    ], [
        9007199254740991n,
        'j////////38='
    ], [
        9007199254740992n,
        'kICAgICAgAA='
    ], [
        14472334024676221n,
        'mdrQrcTypn0='
    ], [
        18014398509481983n,
        'n////////38='
    ], [
        18014398509481984n,
        'oICAgICAgAA='
    ], [
        23416728348467685n,
        'qcysvviMw2U='
    ], [
        36028797018963967n,
        'v////////38='
    ], [
        36028797018963968n,
        'wICAgICAgAA='
    ], [
        37889062373143906n,
        'w6b87Lz+6mI='
    ], [
        61305790721611591n,
        '7POpq7WLrkc='
    ], [
        72057594037927935n,
        '/////////38='
    ], [
        72057594037927936n,
        'gYCAgICAgIAA'
    ], [
        99194853094755497n,
        'gbCappfyipkp'
    ], [
        144115188075855871n,
        'gf////////9/'
    ], [
        144115188075855872n,
        'goCAgICAgIAA'
    ], [
        160500643816367088n,
        'gp2Nz8Onlcdw'
    ], [
        259695496911122585n,
        'g82n9duZn+EZ'
    ], [
        288230376151711743n,
        'g/////////9/'
    ], [
        288230376151711744n,
        'hICAgICAgIAA'
    ], [
        420196140727489673n,
        'heq1xZ7AtakJ'
    ], [
        576460752303423487n,
        'h/////////9/'
    ], [
        576460752303423488n,
        'iICAgICAgIAA'
    ], [
        679891637638612258n,
        'ibfduvnZ1Yoi'
    ], [
        1100087778366101931n,
        'j6KTgJiairMr'
    ], [
        1152921504606846975n,
        'j/////////9/'
    ], [
        1152921504606846976n,
        'kICAgICAgIAA'
    ]]),
    _kimBase64StringByNumberMap = new Map([[
        -9007199254740991,
        'gI////////9/'
    ], [
        -8944394323791464,
        'gI/x3JGzmpxo'
    ], [
        -5527939700884757,
        'gIno9JyR2IoV'
    ], [
        -4503599627370496,
        'gIiAgICAgIAA'
    ], [
        -4503599627370495,
        'gIf///////9/'
    ], [
        -3416454622906707,
        'gIaI5/WhwpJT'
    ], [
        -2251799813685248,
        'gISAgICAgIAA'
    ], [
        -2251799813685247,
        'gIP///////9/'
    ], [
        -2111485077978050,
        'gIPgjKbwlfdC'
    ], [
        -1304969544928657,
        'gIKo286xrJsR'
    ], [
        -1125899906842624,
        'gIKAgICAgIAA'
    ], [
        -1125899906842623,
        'gIH///////9/'
    ], [
        -806515533049393,
        'gIG3sNi+6dwx'
    ], [
        -562949953421312,
        'gIGAgICAgIAA'
    ], [
        -562949953421311,
        'gP///////38='
    ], [
        -498454011879264,
        'gPGq9fLCvmA='
    ], [
        -308061521170129,
        'gMaF4synnVE='
    ], [
        -281474976710656,
        'gMCAgICAgAA='
    ], [
        -281474976710655,
        'gL///////38='
    ], [
        -190392490709135,
        'gKulk6aboQ8='
    ], [
        -140737488355328,
        'gKCAgICAgAA='
    ], [
        -140737488355327,
        'gJ///////38='
    ], [
        -117669030460994,
        'gJrgz6aL/EI='
    ], [
        -72723460248141,
        'gJDExICPpE0='
    ], [
        -70368744177664,
        'gJCAgICAgAA='
    ], [
        -70368744177663,
        'gI///////38='
    ], [
        -44945570212853,
        'gIqci6X813U='
    ], [
        -35184372088832,
        'gIiAgICAgAA='
    ], [
        -35184372088831,
        'gIf//////38='
    ], [
        -27777890035288,
        'gIaouNqSzFg='
    ], [
        -17592186044416,
        'gISAgICAgAA='
    ], [
        -17592186044415,
        'gIP//////38='
    ], [
        -17167680177565,
        'gIPz0svqix0='
    ], [
        -10610209857723,
        'gIK05o6owTs='
    ], [
        -8796093022208,
        'gIKAgICAgAA='
    ], [
        -8796093022207,
        'gIH//////38='
    ], [
        -6557470319842,
        'gIG+7L3ByWI='
    ], [
        -4398046511104,
        'gIGAgICAgAA='
    ], [
        -4398046511103,
        'gP//////fw=='
    ], [
        -4052739537881,
        'gPX50Ob3WQ=='
    ], [
        -2504730781961,
        'gMjy7NrSCQ=='
    ], [
        -2199023255552,
        'gMCAgICAAA=='
    ], [
        -2199023255551,
        'gL//////fw=='
    ], [
        -1548008755920,
        'gK2G5IylUA=='
    ], [
        -1099511627776,
        'gKCAgICAAA=='
    ], [
        -1099511627775,
        'gJ//////fw=='
    ], [
        -956722026041,
        'gJvsiM6sOQ=='
    ], [
        -591286729879,
        'gJGa2735Fw=='
    ], [
        -549755813888,
        'gJCAgICAAA=='
    ], [
        -549755813887,
        'gI//////fw=='
    ], [
        -365435296162,
        'gIrRrZCzIg=='
    ], [
        -274877906944,
        'gIiAgICAAA=='
    ], [
        -274877906943,
        'gIf/////fw=='
    ], [
        -225851433717,
        'gIbJrq3FdQ=='
    ], [
        -139583862445,
        'gISH/uLtLQ=='
    ], [
        -137438953472,
        'gISAgICAAA=='
    ], [
        -137438953471,
        'gIP/////fw=='
    ], [
        -86267571272,
        'gILBr8rYSA=='
    ], [
        -68719476736,
        'gIKAgICAAA=='
    ], [
        -68719476735,
        'gIH/////fw=='
    ], [
        -53316291173,
        'gIHGz5iUZQ=='
    ], [
        -34359738368,
        'gIGAgICAAA=='
    ], [
        -34359738367,
        'gP////9/'
    ], [
        -32951280099,
        'gPrgssNj'
    ], [
        -20365011074,
        'gMvu5dEC'
    ], [
        -17179869184,
        'gMCAgIAA'
    ], [
        -17179869183,
        'gL////9/'
    ], [
        -12586269025,
        'gK7xzPJh'
    ], [
        -8589934592,
        'gKCAgIAA'
    ], [
        -8589934591,
        'gJ////9/'
    ], [
        -7778742049,
        'gJz9mN4h'
    ], [
        -4807526976,
        'gJH0tJRA'
    ], [
        -4294967296,
        'gJCAgIAA'
    ], [
        -4294967295,
        'gI////9/'
    ], [
        -2971215073,
        'gIuI5Mlh'
    ], [
        -2147483648,
        'gIiAgIAA'
    ], [
        -2147483647,
        'gIf///9/'
    ], [
        -1836311903,
        'gIbrz8pf'
    ], [
        -1134903170,
        'gISdlP8C'
    ], [
        -1073741824,
        'gISAgIAA'
    ], [
        -1073741823,
        'gIP///9/'
    ], [
        -701408733,
        'gILOustd'
    ], [
        -536870912,
        'gIKAgIAA'
    ], [
        -536870911,
        'gIH///9/'
    ], [
        -433494437,
        'gIHO2rMl'
    ], [
        -268435456,
        'gIGAgIAA'
    ], [
        -268435455,
        'gP///38='
    ], [
        -267914296,
        'gP/gmDg='
    ], [
        -165580141,
        'gM76mm0='
    ], [
        -134217728,
        'gMCAgAA='
    ], [
        -134217727,
        'gL///38='
    ], [
        -102334155,
        'gLDl/Us='
    ], [
        -67108864,
        'gKCAgAA='
    ], [
        -67108863,
        'gJ///38='
    ], [
        -63245986,
        'gJ6UnSI='
    ], [
        -39088169,
        'gJLR4Ck='
    ], [
        -33554432,
        'gJCAgAA='
    ], [
        -33554431,
        'gI///38='
    ], [
        -24157817,
        'gIvCvHk='
    ], [
        -16777216,
        'gIiAgAA='
    ], [
        -16777215,
        'gIf//38='
    ], [
        -14930352,
        'gIePozA='
    ], [
        -9227465,
        'gISzmUk='
    ], [
        -8388608,
        'gISAgAA='
    ], [
        -8388607,
        'gIP//38='
    ], [
        -5702887,
        'gILciWc='
    ], [
        -4194304,
        'gIKAgAA='
    ], [
        -4194303,
        'gIH//38='
    ], [
        -3524578,
        'gIHXj2I='
    ], [
        -2178309,
        'gIGE+gU='
    ], [
        -2097152,
        'gIGAgAA='
    ], [
        -2097151,
        'gP//fw=='
    ], [
        -1346269,
        'gNKVXQ=='
    ], [
        -1048576,
        'gMCAAA=='
    ], [
        -1048575,
        'gL//fw=='
    ], [
        -832040,
        'gLLkKA=='
    ], [
        -524288,
        'gKCAAA=='
    ], [
        -524287,
        'gJ//fw=='
    ], [
        -514229,
        'gJ+xNQ=='
    ], [
        -317811,
        'gJOycw=='
    ], [
        -262144,
        'gJCAAA=='
    ], [
        -262143,
        'gI//fw=='
    ], [
        -196418,
        'gIv+Qg=='
    ], [
        -131072,
        'gIiAAA=='
    ], [
        -131071,
        'gIf/fw=='
    ], [
        -121393,
        'gIe0MQ=='
    ], [
        -75025,
        'gITKEQ=='
    ], [
        -65536,
        'gISAAA=='
    ], [
        -65535,
        'gIP/fw=='
    ], [
        -46368,
        'gILqIA=='
    ], [
        -32768,
        'gIKAAA=='
    ], [
        -32767,
        'gIH/fw=='
    ], [
        -28657,
        'gIHfcQ=='
    ], [
        -17711,
        'gIGKLw=='
    ], [
        -16384,
        'gIGAAA=='
    ], [
        -16383,
        'gP9/'
    ], [
        -10946,
        'gNVC'
    ], [
        -8192,
        'gMAA'
    ], [
        -8191,
        'gL9/'
    ], [
        -6765,
        'gLRt'
    ], [
        -4181,
        'gKBV'
    ], [
        -4096,
        'gKAA'
    ], [
        -4095,
        'gJ9/'
    ], [
        -2584,
        'gJQY'
    ], [
        -2048,
        'gJAA'
    ], [
        -2047,
        'gI9/'
    ], [
        -1597,
        'gIw9'
    ], [
        -1024,
        'gIgA'
    ], [
        -1023,
        'gId/'
    ], [
        -987,
        'gIdb'
    ], [
        -610,
        'gIRi'
    ], [
        -512,
        'gIQA'
    ], [
        -511,
        'gIN/'
    ], [
        -377,
        'gIJ5'
    ], [
        -256,
        'gIIA'
    ], [
        -255,
        'gIF/'
    ], [
        -233,
        'gIFp'
    ], [
        -144,
        'gIEQ'
    ], [
        -128,
        'gIEA'
    ], [
        -127,
        'gH8='
    ], [
        -89,
        'gFk='
    ], [
        -64,
        'gEA='
    ], [
        -63,
        'gD8='
    ], [
        -55,
        'gDc='
    ], [
        -34,
        'gCI='
    ], [
        -32,
        'gCA='
    ], [
        -31,
        'gB8='
    ], [
        -21,
        'gBU='
    ], [
        -16,
        'gBA='
    ], [
        -15,
        'gA8='
    ], [
        -13,
        'gA0='
    ], [
        -8,
        'gAg='
    ], [
        -7,
        'gAc='
    ], [
        -5,
        'gAU='
    ], [
        -4,
        'gAQ='
    ], [
        -3,
        'gAM='
    ], [
        -2,
        'gAI='
    ], [
        -1,
        'gAE='
    ], [
        0,
        'AA=='
    ], [
        1,
        'AQ=='
    ], [
        2,
        'Ag=='
    ], [
        3,
        'Aw=='
    ], [
        4,
        'BA=='
    ], [
        5,
        'BQ=='
    ], [
        7,
        'Bw=='
    ], [
        8,
        'CA=='
    ], [
        13,
        'DQ=='
    ], [
        15,
        'Dw=='
    ], [
        16,
        'EA=='
    ], [
        21,
        'FQ=='
    ], [
        31,
        'Hw=='
    ], [
        32,
        'IA=='
    ], [
        34,
        'Ig=='
    ], [
        55,
        'Nw=='
    ], [
        63,
        'Pw=='
    ], [
        64,
        'QA=='
    ], [
        89,
        'WQ=='
    ], [
        127,
        'fw=='
    ], [
        128,
        'gQA='
    ], [
        144,
        'gRA='
    ], [
        233,
        'gWk='
    ], [
        255,
        'gX8='
    ], [
        256,
        'ggA='
    ], [
        377,
        'gnk='
    ], [
        511,
        'g38='
    ], [
        512,
        'hAA='
    ], [
        610,
        'hGI='
    ], [
        987,
        'h1s='
    ], [
        1023,
        'h38='
    ], [
        1024,
        'iAA='
    ], [
        1597,
        'jD0='
    ], [
        2047,
        'j38='
    ], [
        2048,
        'kAA='
    ], [
        2584,
        'lBg='
    ], [
        4095,
        'n38='
    ], [
        4096,
        'oAA='
    ], [
        4181,
        'oFU='
    ], [
        6765,
        'tG0='
    ], [
        8191,
        'v38='
    ], [
        8192,
        'wAA='
    ], [
        10946,
        '1UI='
    ], [
        16383,
        '/38='
    ], [
        16384,
        'gYAA'
    ], [
        17711,
        'gYov'
    ], [
        28657,
        'gd9x'
    ], [
        32767,
        'gf9/'
    ], [
        32768,
        'goAA'
    ], [
        46368,
        'guog'
    ], [
        65535,
        'g/9/'
    ], [
        65536,
        'hIAA'
    ], [
        75025,
        'hMoR'
    ], [
        121393,
        'h7Qx'
    ], [
        131071,
        'h/9/'
    ], [
        131072,
        'iIAA'
    ], [
        196418,
        'i/5C'
    ], [
        262143,
        'j/9/'
    ], [
        262144,
        'kIAA'
    ], [
        317811,
        'k7Jz'
    ], [
        514229,
        'n7E1'
    ], [
        524287,
        'n/9/'
    ], [
        524288,
        'oIAA'
    ], [
        832040,
        'suQo'
    ], [
        1048575,
        'v/9/'
    ], [
        1048576,
        'wIAA'
    ], [
        1346269,
        '0pVd'
    ], [
        2097151,
        '//9/'
    ], [
        2097152,
        'gYCAAA=='
    ], [
        2178309,
        'gYT6BQ=='
    ], [
        3524578,
        'gdePYg=='
    ], [
        4194303,
        'gf//fw=='
    ], [
        4194304,
        'goCAAA=='
    ], [
        5702887,
        'gtyJZw=='
    ], [
        8388607,
        'g///fw=='
    ], [
        8388608,
        'hICAAA=='
    ], [
        9227465,
        'hLOZSQ=='
    ], [
        14930352,
        'h4+jMA=='
    ], [
        16777215,
        'h///fw=='
    ], [
        16777216,
        'iICAAA=='
    ], [
        24157817,
        'i8K8eQ=='
    ], [
        33554431,
        'j///fw=='
    ], [
        33554432,
        'kICAAA=='
    ], [
        39088169,
        'ktHgKQ=='
    ], [
        63245986,
        'npSdIg=='
    ], [
        67108863,
        'n///fw=='
    ], [
        67108864,
        'oICAAA=='
    ], [
        102334155,
        'sOX9Sw=='
    ], [
        134217727,
        'v///fw=='
    ], [
        134217728,
        'wICAAA=='
    ], [
        165580141,
        'zvqabQ=='
    ], [
        267914296,
        '/+CYOA=='
    ], [
        268435455,
        '////fw=='
    ], [
        268435456,
        'gYCAgAA='
    ], [
        433494437,
        'gc7asyU='
    ], [
        536870911,
        'gf///38='
    ], [
        536870912,
        'goCAgAA='
    ], [
        701408733,
        'gs66y10='
    ], [
        1073741823,
        'g////38='
    ], [
        1073741824,
        'hICAgAA='
    ], [
        1134903170,
        'hJ2U/wI='
    ], [
        1836311903,
        'huvPyl8='
    ], [
        2147483647,
        'h////38='
    ], [
        2147483648,
        'iICAgAA='
    ], [
        2971215073,
        'i4jkyWE='
    ], [
        4294967295,
        'j////38='
    ], [
        4294967296,
        'kICAgAA='
    ], [
        4807526976,
        'kfS0lEA='
    ], [
        7778742049,
        'nP2Y3iE='
    ], [
        8589934591,
        'n////38='
    ], [
        8589934592,
        'oICAgAA='
    ], [
        12586269025,
        'rvHM8mE='
    ], [
        17179869183,
        'v////38='
    ], [
        17179869184,
        'wICAgAA='
    ], [
        20365011074,
        'y+7l0QI='
    ], [
        32951280099,
        '+uCyw2M='
    ], [
        34359738367,
        '/////38='
    ], [
        34359738368,
        'gYCAgIAA'
    ], [
        53316291173,
        'gcbPmJRl'
    ], [
        68719476735,
        'gf////9/'
    ], [
        68719476736,
        'goCAgIAA'
    ], [
        86267571272,
        'gsGvythI'
    ], [
        137438953471,
        'g/////9/'
    ], [
        137438953472,
        'hICAgIAA'
    ], [
        139583862445,
        'hIf+4u0t'
    ], [
        225851433717,
        'hsmurcV1'
    ], [
        274877906943,
        'h/////9/'
    ], [
        274877906944,
        'iICAgIAA'
    ], [
        365435296162,
        'itGtkLMi'
    ], [
        549755813887,
        'j/////9/'
    ], [
        549755813888,
        'kICAgIAA'
    ], [
        591286729879,
        'kZrbvfkX'
    ], [
        956722026041,
        'm+yIzqw5'
    ], [
        1099511627775,
        'n/////9/'
    ], [
        1099511627776,
        'oICAgIAA'
    ], [
        1548008755920,
        'rYbkjKVQ'
    ], [
        2199023255551,
        'v/////9/'
    ], [
        2199023255552,
        'wICAgIAA'
    ], [
        2504730781961,
        'yPLs2tIJ'
    ], [
        4052739537881,
        '9fnQ5vdZ'
    ], [
        4398046511103,
        '//////9/'
    ], [
        4398046511104,
        'gYCAgICAAA=='
    ], [
        6557470319842,
        'gb7svcHJYg=='
    ], [
        8796093022207,
        'gf//////fw=='
    ], [
        8796093022208,
        'goCAgICAAA=='
    ], [
        10610209857723,
        'grTmjqjBOw=='
    ], [
        17167680177565,
        'g/PSy+qLHQ=='
    ], [
        17592186044415,
        'g///////fw=='
    ], [
        17592186044416,
        'hICAgICAAA=='
    ], [
        27777890035288,
        'hqi42pLMWA=='
    ], [
        35184372088831,
        'h///////fw=='
    ], [
        35184372088832,
        'iICAgICAAA=='
    ], [
        44945570212853,
        'ipyLpfzXdQ=='
    ], [
        70368744177663,
        'j///////fw=='
    ], [
        70368744177664,
        'kICAgICAAA=='
    ], [
        72723460248141,
        'kMTEgI+kTQ=='
    ], [
        117669030460994,
        'muDPpov8Qg=='
    ], [
        140737488355327,
        'n///////fw=='
    ], [
        140737488355328,
        'oICAgICAAA=='
    ], [
        190392490709135,
        'q6WTppuhDw=='
    ], [
        281474976710655,
        'v///////fw=='
    ], [
        281474976710656,
        'wICAgICAAA=='
    ], [
        308061521170129,
        'xoXizKedUQ=='
    ], [
        498454011879264,
        '8ar18sK+YA=='
    ], [
        562949953421311,
        '////////fw=='
    ], [
        562949953421312,
        'gYCAgICAgAA='
    ], [
        806515533049393,
        'gbew2L7p3DE='
    ], [
        1125899906842623,
        'gf///////38='
    ], [
        1125899906842624,
        'goCAgICAgAA='
    ], [
        1304969544928657,
        'gqjbzrGsmxE='
    ], [
        2111485077978050,
        'g+CMpvCV90I='
    ], [
        2251799813685247,
        'g////////38='
    ], [
        2251799813685248,
        'hICAgICAgAA='
    ], [
        3416454622906707,
        'hojn9aHCklM='
    ], [
        4503599627370495,
        'h////////38='
    ], [
        4503599627370496,
        'iICAgICAgAA='
    ], [
        5527939700884757,
        'iej0nJHYihU='
    ], [
        8944394323791464,
        'j/HckbOanGg='
    ], [
        9007199254740991,
        'j////////38='
    ]]),
    _kimBase64StringByStringMap = new Map([[
        '',
        ''
    ], [
        '\x00',
        'AA=='
    ], [
        '\x01\x02\x03\x07\x08\x0B\x0C\x0E\x0F\x1B\x7F',
        'AQIDBwgLDA4PG38='
    ], [
        '\t',
        'CQ=='
    ], [
        '\ttab\tcharacters\t',
        'CXRhYgljaGFyYWN0ZXJzCQ=='
    ], [
        '\n',
        'Cg=='
    ], [
        '\r\n',
        'DQo='
    ], [
        '\x1C\x1D\x1E\x1F',
        'HB0eHw=='
    ], [
        ' ',
        'IA=='
    ], [
        '  multiple   spaces  ',
        'ICBtdWx0aXBsZSAgIHNwYWNlcyAg'
    ], [
        ' leading space',
        'IGxlYWRpbmcgc3BhY2U='
    ], [
        '!@#$%^&*()_+-=[]{}|;:,.<>?',
        'IUAjJCVeJiooKV8rLT1bXXt9fDs6LC48Pj8='
    ], [
        '&lt;&gt;&amp;',
        'Jmx0OyZndDsmYW1wOw=='
    ], [
        '123',
        'MTIz'
    ], [
        '3.14159',
        'My4xNDE1OQ=='
    ], [
        '42',
        'NDI='
    ], [
        '<tag>content</tag>',
        'PHRhZz5jb250ZW50PC90YWc+'
    ], [
        'A',
        'QQ=='
    ], [
        'Ancient scripts: 𓀀𓀁𓀂 hieroglyphs and 𒀀𒀁𒀂 cuneiform',
        'QW5jaWVudCBzY3JpcHRzOiCE4ACE4AGE4AIgaGllcm9nbHlwaHMgYW5kIITAAITAAYTAAiBjdW5laWZvcm0='
    ], [
        'App\uF000specific\uF001icons\uF002and\uF003symbols\uF004here',
        'QXBwg+AAc3BlY2lmaWOD4AFpY29uc4PgAmFuZIPgA3N5bWJvbHOD4ARoZXJl'
    ], [
        'BOM\uFEFFin\uFEFFmiddle\uFEFFtext',
        'Qk9Ng/1/aW6D/X9taWRkbGWD/X90ZXh0'
    ], [
        'Before\u200BZero\u200CWidth\u200DAfter',
        'QmVmb3JlwAtaZXJvwAxXaWR0aMANQWZ0ZXI='
    ], [
        'Bidi\u202ERtL\u202DOverride\u202CNormal',
        'QmlkacAuUnRMwC1PdmVycmlkZcAsTm9ybWFs'
    ], [
        'Björk',
        'QmqBdnJr'
    ], [
        'Braille says: ⠓⠑⠇⠇⠕ (hello)',
        'QnJhaWxsZSBzYXlzOiDQE9AR0AfQB9AVIChoZWxsbyk='
    ], [
        'CJK\u3000ideographic\u205Fmedium\u202Fnarrow\u2006six-per-em\u2005four-per-em',
        'Q0pL4ABpZGVvZ3JhcGhpY8BfbWVkaXVtwC9uYXJyb3fABnNpeC1wZXItZW3ABWZvdXItcGVyLWVt'
    ], [
        'Café 中文 العربية Русский',
        'Q2FmgWkggZwtgcsHIIwnjESMOYwxjCiMSowpIIggiEOIQYhBiDqIOIg5'
    ], [
        'Celebrate: 🌟🔥💯 amazing achievement!',
        'Q2VsZWJyYXRlOiCH5h+H6iWH6S8gYW1hemluZyBhY2hpZXZlbWVudCE='
    ], [
        'Chess: ♔♕♖♗♘♙ vs ♚♛♜♝♞♟ pieces',
        'Q2hlc3M6IMxUzFXMVsxXzFjMWSB2cyDMWsxbzFzMXcxezF8gcGllY2Vz'
    ], [
        'Custom\uE000symbols\uE001for\uE002internal\uE003use\uE004only',
        'Q3VzdG9tg8AAc3ltYm9sc4PAAWZvcoPAAmludGVybmFsg8ADdXNlg8AEb25seQ=='
    ], [
        'Diverse team: 👩🏻‍🦱 working with colleagues',
        'RGl2ZXJzZSB0ZWFtOiCH6GmH53vADYfzMSB3b3JraW5nIHdpdGggY29sbGVhZ3Vlcw=='
    ], [
        'Emoji\uFE0F vs text\uFE0E presentation selectors',
        'RW1vammD/A8gdnMgdGV4dIP8DiBwcmVzZW50YXRpb24gc2VsZWN0b3Jz'
    ], [
        'English text \u202ALeft-to-Right embedded العربية\u202C more English',
        'RW5nbGlzaCB0ZXh0IMAqTGVmdC10by1SaWdodCBlbWJlZGRlZCCMJ4xEjDmMMYwojEqMKcAsIG1vcmUgRW5nbGlzaA=='
    ], [
        'En\u2002space\u2003em\u2004three-per-em\u2007figure\u2008punctuation\u202Fnarrow',
        'RW7AAnNwYWNlwANlbcAEdGhyZWUtcGVyLWVtwAdmaWd1cmXACHB1bmN0dWF0aW9uwC9uYXJyb3c='
    ], [
        'Family photo: 👨‍👩‍👧‍👦 at the beach 🌍',
        'RmFtaWx5IHBob3RvOiCH6GjADYfoacANh+hnwA2H6GYgYXQgdGhlIGJlYWNoIIfmDQ=='
    ], [
        'Fancy: ╔╦╗ Double ╠╬╣ Lines ╚╩╝',
        'RmFuY3k6IMpUymbKVyBEb3VibGUgymDKbMpjIExpbmVzIMpaymnKXQ=='
    ], [
        'Figure\u2007space\u2008punctuation\u2009space\u00A0non-breaking\u1680ogham',
        'RmlndXJlwAdzcGFjZcAIcHVuY3R1YXRpb27ACXNwYWNlgSBub24tYnJlYWtpbmetAG9naGFt'
    ], [
        'First line of text\u2028Second line after line separator\u2028Third line here',
        'Rmlyc3QgbGluZSBvZiB0ZXh0wChTZWNvbmQgbGluZSBhZnRlciBsaW5lIHNlcGFyYXRvcsAoVGhpcmQgbGluZSBoZXJl'
    ], [
        'First paragraph content goes here.\u2029New paragraph starts after separator.\u2029Final paragraph ends.',
        'Rmlyc3QgcGFyYWdyYXBoIGNvbnRlbnQgZ29lcyBoZXJlLsApTmV3IHBhcmFncmFwaCBzdGFydHMgYWZ0ZXIgc2VwYXJhdG9yLsApRmluYWwgcGFyYWdyYXBoIGVuZHMu'
    ], [
        'First strong \u2068Auto-detect direction العربية\u2069 continues',
        'Rmlyc3Qgc3Ryb25nIMBoQXV0by1kZXRlY3QgZGlyZWN0aW9uIIwnjESMOYwxjCiMSowpwGkgY29udGludWVz'
    ], [
        'Fractions: ½⅓¼¾⅛⅜⅝⅞ in recipes',
        'RnJhY3Rpb25zOiCBPcJTgTyBPsJbwlzCXcJeIGluIHJlY2lwZXM='
    ], [
        'François',
        'RnJhboFnb2lz'
    ], [
        'Greek letters: α β γ δ ε in equations',
        'R3JlZWsgbGV0dGVyczoghzEghzIghzMghzQghzUgaW4gZXF1YXRpb25z'
    ], [
        'Greetings: 👋🏽 and handshakes 🤝🏿',
        'R3JlZXRpbmdzOiCH6EuH530gYW5kIGhhbmRzaGFrZXMgh/Idh+d/'
    ], [
        'Happy birthday! 🎉🚀✨ Hope you have fun!',
        'SGFwcHkgYmlydGhkYXkhIIfnCYftAM4oIEhvcGUgeW91IGhhdmUgZnVuIQ=='
    ], [
        'Hello\x00World\x1CFile\x1DGroup\x1ERecord',
        'SGVsbG8AV29ybGQcRmlsZR1Hcm91cB5SZWNvcmQ='
    ], [
        'Hello World',
        'SGVsbG8gV29ybGQ='
    ], [
        'Hello مرحبا 你好 こんにちは',
        'SGVsbG8gjEWMMYwtjCiMJyCBnmCBsn0g4FPhE+Br4GHgbw=='
    ], [
        'Infinity ∞ ≠ zero, also ≤ ≥ ≈ relations',
        'SW5maW5pdHkgxB4gxGAgemVybywgYWxzbyDEZCDEZSDESCByZWxhdGlvbnM='
    ], [
        'Isolate \u2066LTR content\u2069 mixed with \u2067RTL محتوى\u2069 properly',
        'SXNvbGF0ZSDAZkxUUiBjb250ZW50wGkgbWl4ZWQgd2l0aCDAZ1JUTCCMRYwtjCqMSIxJwGkgcHJvcGVybHk='
    ], [
        'José María',
        'Sm9zgWkgTWFygW1h'
    ], [
        'Legacy\uE100system\uE101codes\uE102and\uE103private\uE104mappings',
        'TGVnYWN5g8IAc3lzdGVtg8IBY29kZXODwgJhbmSDwgNwcml2YXRlg8IEbWFwcGluZ3M='
    ], [
        'Line\u2028Sep\u2029Para\u2028Break',
        'TGluZcAoU2VwwClQYXJhwChCcmVhaw=='
    ], [
        'Lorem ipsum dolor sit amet',
        'TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ='
    ], [
        'Lorem ipsum dolor sit amet, consectetur adipiscing elit',
        'TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdA=='
    ], [
        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',
        'TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBuaXNpIHV0IGFsaXF1aXAgZXggZWEgY29tbW9kbyBjb25zZXF1YXQuIER1aXMgYXV0ZSBpcnVyZSBkb2xvciBpbiByZXByZWhlbmRlcml0IGluIHZvbHVwdGF0ZSB2ZWxpdCBlc3NlIGNpbGx1bSBkb2xvcmUgZXUgZnVnaWF0IG51bGxhIHBhcmlhdHVyLg=='
    ], [
        'Math bold: 𝐀𝐁𝐂𝐃𝐄 alphabet transformations',
        'TWF0aCBib2xkOiCHqACHqAGHqAKHqAOHqAQgYWxwaGFiZXQgdHJhbnNmb3JtYXRpb25z'
    ], [
        'Mathematical: 𝕳𝖊𝖑𝖑𝖔 𝓗𝓮𝓵𝓵𝓸 special fonts',
        'TWF0aGVtYXRpY2FsOiCHqnOHqwqHqxGHqxGHqxQgh6lXh6luh6l1h6l1h6l4IHNwZWNpYWwgZm9udHM='
    ], [
        'Mixed: Line one\u2028Line two\u2029New paragraph\u2028Another line\u2029Final paragraph',
        'TWl4ZWQ6IExpbmUgb25lwChMaW5lIHR3b8ApTmV3IHBhcmFncmFwaMAoQW5vdGhlciBsaW5lwClGaW5hbCBwYXJhZ3JhcGg='
    ], [
        'Multi\u0301\u0300\u0302combining\u0303test',
        'TXVsdGmGAYYAhgJjb21iaW5pbmeGA3Rlc3Q='
    ], [
        'Navigation: ←↑→↓↔↕ arrows for directions',
        'TmF2aWdhdGlvbjogwxDDEcMSwxPDFMMVIGFycm93cyBmb3IgZGlyZWN0aW9ucw=='
    ], [
        'Notes: ♪♫♬♩ with ♯♭ accidentals',
        'Tm90ZXM6IMxqzGvMbMxpIHdpdGggzG/MbSBhY2NpZGVudGFscw=='
    ], [
        'Number 1\uFE0E vs 1\uFE0F different displays',
        'TnVtYmVyIDGD/A4gdnMgMYP8DyBkaWZmZXJlbnQgZGlzcGxheXM='
    ], [
        'Override test \u202DForced LTR\u202C and \u202EForced RTL\u202C text',
        'T3ZlcnJpZGUgdGVzdCDALUZvcmNlZCBMVFLALCBhbmQgwC5Gb3JjZWQgUlRMwCwgdGV4dA=='
    ], [
        'Prices: $100 €85 £70 ¥1000 ₹7500 ₽5000 ₨8000 ₩120000 ₪350',
        'UHJpY2VzOiAkMTAwIMEsODUggSM3MCCBJTEwMDAgwTk3NTAwIME9NTAwMCDBKDgwMDAgwSkxMjAwMDAgwSozNTA='
    ], [
        'Sed ut perspiciatis unde omnis iste natus error',
        'U2VkIHV0IHBlcnNwaWNpYXRpcyB1bmRlIG9tbmlzIGlzdGUgbmF0dXMgZXJyb3I='
    ], [
        'Space mission: 👨‍🚀 launches to stars',
        'U3BhY2UgbWlzc2lvbjogh+howA2H7QAgbGF1bmNoZXMgdG8gc3RhcnM='
    ], [
        'Square roots √∛∜ and logic ∴∵∈∉⊂⊃',
        'U3F1YXJlIHJvb3RzIMQaxBvEHCBhbmQgbG9naWMgxDTENcQIxAnFAsUD'
    ], [
        'Start \u202BRight-to-Left override الكتابة\u202C normal direction',
        'U3RhcnQgwCtSaWdodC10by1MZWZ0IG92ZXJyaWRlIIwnjESMQ4wqjCeMKIwpwCwgbm9ybWFsIGRpcmVjdGlvbg=='
    ], [
        'Table: ┌┬┐ Header ├┼┤ Data └┴┘',
        'VGFibGU6IMoMyizKECBIZWFkZXIgyhzKPMokIERhdGEgyhTKNMoY'
    ], [
        'Teamwork: 🧑‍🤝‍🧑 making progress together',
        'VGVhbXdvcms6IIfzUcANh/IdwA2H81EgbWFraW5nIHByb2dyZXNzIHRvZ2V0aGVy'
    ], [
        'Temperature: -40°C',
        'VGVtcGVyYXR1cmU6IC00MIEwQw=='
    ], [
        'Temperature: 23°C ±2°C, also E=mc²³¹',
        'VGVtcGVyYXR1cmU6IDIzgTBDIIExMoEwQywgYWxzbyBFPW1jgTKBM4E5'
    ], [
        'Testing 123 テスト ✓',
        'VGVzdGluZyAxMjMg4UbhOeFIIM4T'
    ], [
        'The answer is 42',
        'VGhlIGFuc3dlciBpcyA0Mg=='
    ], [
        'The quick brown fox jumps over the lazy dog',
        'VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZw=='
    ], [
        'The sum ∑∏∫∂∇ of functions',
        'VGhlIHN1bSDEEcQPxCvEAsQHIG9mIGZ1bmN0aW9ucw=='
    ], [
        'Thin\u2009spaces\u200Abetween\u2000words\u2001in\u2002this\u2003sentence\u2004test',
        'VGhpbsAJc3BhY2VzwApiZXR3ZWVuwAB3b3Jkc8ABaW7AAnRoaXPAA3NlbnRlbmNlwAR0ZXN0'
    ], [
        'This is a test string with multiple scripts: 这是中文, هذا عربي, это русский, αυτό είναι ελληνικό, これは日本語です, 이것은 한국어입니다. It includes various Unicode characters like emojis 🌍🚀✨ and mathematical symbols ∑∏∫ along with special characters ™®© and currency symbols $€£¥.',
        'VGhpcyBpcyBhIHRlc3Qgc3RyaW5nIHdpdGggbXVsdGlwbGUgc2NyaXB0czoggp9ZgcwvgZwtgcsHLCCMR4wwjCcgjDmMMYwojEosIIhNiEKIPiCIQIhDiEGIQYg6iDiIOSwghzGHRYdEh0wghzWHL4c9hzGHOSCHNYc7hzuHN4c9hzmHOodMLCDgU+EM4G+By2WBziyClR7gZ+BZLCCDjnSC2QODjkAgg6pcgtptg4s0g48FguVIguVkLiBJdCBpbmNsdWRlcyB2YXJpb3VzIFVuaWNvZGUgY2hhcmFjdGVycyBsaWtlIGVtb2ppcyCH5g2H7QDOKCBhbmQgbWF0aGVtYXRpY2FsIHN5bWJvbHMgxBHED8QrIGFsb25nIHdpdGggc3BlY2lhbCBjaGFyYWN0ZXJzIMIigS6BKSBhbmQgY3VycmVuY3kgc3ltYm9scyAkwSyBI4ElLg=='
    ], [
        'Trademark™ Registered® Copyright© ServiceMark℠',
        'VHJhZGVtYXJrwiIgUmVnaXN0ZXJlZIEuIENvcHlyaWdodIEpIFNlcnZpY2VNYXJrwiA='
    ], [
        'Unicode\u1680Space\u2009Thin\u3000Ideo',
        'VW5pY29kZa0AU3BhY2XACVRoaW7gAElkZW8='
    ], [
        'User ID: 12345',
        'VXNlciBJRDogMTIzNDU='
    ], [
        'Valid\uFFFDreplacement\uFFFCobject\uFFFD',
        'VmFsaWSD/31yZXBsYWNlbWVudIP/fG9iamVjdIP/fQ=='
    ], [
        'Version 2.0.1',
        'VmVyc2lvbiAyLjAuMQ=='
    ], [
        'Work from home: 👩‍💻 coding all day',
        'V29yayBmcm9tIGhvbWU6IIfoacANh+k7IGNvZGluZyBhbGwgZGF5'
    ], [
        'Zürich',
        'WoF8cmljaA=='
    ], [
        '[1, 2, 3]',
        'WzEsIDIsIDNd'
    ], [
        'a',
        'YQ=='
    ], [
        'bazinga',
        'YmF6aW5nYQ=='
    ], [
        'blah blah blah',
        'YmxhaCBibGFoIGJsYWg='
    ], [
        'both\r\ncrlf',
        'Ym90aA0KY3JsZg=='
    ], [
        'café',
        'Y2FmgWk='
    ], [
        'café vs cafe\u0301',
        'Y2FmgWkgdnMgY2FmZYYB'
    ], [
        'carriage\rreturn',
        'Y2FycmlhZ2UNcmV0dXJu'
    ], [
        'complex\u0300\u0301\u0302\u0303 combining',
        'Y29tcGxleIYAhgGGAoYDIGNvbWJpbmluZw=='
    ], [
        'file://localhost/path',
        'ZmlsZTovL2xvY2FsaG9zdC9wYXRo'
    ], [
        'fnord',
        'Zm5vcmQ='
    ], [
        'foo bar baz',
        'Zm9vIGJhciBiYXo='
    ], [
        'https://example.com',
        'aHR0cHM6Ly9leGFtcGxlLmNvbQ=='
    ], [
        'line\nbreak',
        'bGluZQpicmVhaw=='
    ], [
        'naïve',
        'bmGBb3Zl'
    ], [
        'na\u0303ive re\u0301sume\u0301 Zu\u0308rich',
        'bmGGA2l2ZSByZYYBc3VtZYYBIFp1hghyaWNo'
    ], [
        'norm\u0301al\uFFFDtext\u200Bwith\x00problems',
        'bm9ybYYBYWyD/310ZXh0wAt3aXRoAHByb2JsZW1z'
    ], [
        'piñata',
        'cGmBcWF0YQ=='
    ], [
        'quux',
        'cXV1eA=='
    ], [
        'résumé',
        'coFpc3VtgWk='
    ], [
        'text\x00with\x1Cembedded\x1Fcontrols',
        'dGV4dAB3aXRoHGVtYmVkZGVkH2NvbnRyb2xz'
    ], [
        'trailing space ',
        'dHJhaWxpbmcgc3BhY2Ug'
    ], [
        'user@domain.co.uk',
        'dXNlckBkb21haW4uY28udWs='
    ], [
        'word\u200Bboundary\u200Ctest\u200Djoined',
        'd29yZMALYm91bmRhcnnADHRlc3TADWpvaW5lZA=='
    ], [
        'xyzzy',
        'eHl6enk='
    ], [
        '{"key": "value"}',
        'eyJrZXkiOiAidmFsdWUifQ=='
    ], [
        '\x80\x81\x9F',
        'gQCBAYEf'
    ], [
        'Ångström',
        'gUVuZ3N0coF2bQ=='
    ], [
        'ñoño',
        'gXFvgXFv'
    ], [
        '\u0301\u0300\u0302orphaned combining marks',
        'hgGGAIYCb3JwaGFuZWQgY29tYmluaW5nIG1hcmtz'
    ], [
        'Αθήνα',
        'hxGHOIcuhz2HMQ=='
    ], [
        'Ελληνικά',
        'hxWHO4c7hzeHPYc5hzqHLA=='
    ], [
        'γεια σας',
        'hzOHNYc5hzEgh0OHMYdC'
    ], [
        'φιλοσοφία',
        'h0aHOYc7hz+HQ4c/h0aHL4cx'
    ], [
        'Москва',
        'iByIPohBiDqIMogw'
    ], [
        'Привет',
        'iB+IQIg4iDKINYhC'
    ], [
        'Санкт-Петербург',
        'iCGIMIg9iDqIQi2IH4g1iEKINYhAiDGIQ4hAiDM='
    ], [
        'здравствуй',
        'iDeINIhAiDCIMohBiEKIMohDiDk='
    ], [
        'ירושלים',
        'i1mLaItVi2mLXItZi10='
    ], [
        'עברית',
        'i2KLUYtoi1mLag=='
    ], [
        'שלום',
        'i2mLXItVi10='
    ], [
        'תל אביב',
        'i2qLXCCLUItRi1mLUQ=='
    ], [
        'السلام عليكم',
        'jCeMRIwzjESMJ4xFIIw5jESMSoxDjEU='
    ], [
        'العربية',
        'jCeMRIw5jDGMKIxKjCk='
    ], [
        'القاهرة',
        'jCeMRIxCjCeMR4wxjCk='
    ], [
        'مرحبا',
        'jEWMMYwtjCiMJw=='
    ], [
        'नमस्ते',
        'kiiSLpI4kk2SJJJH'
    ], [
        'भारत',
        'ki2SPpIwkiQ='
    ], [
        'हिन्दी',
        'kjmSP5Iokk2SJpJA'
    ], [
        'กรุงเทพ',
        'nAGcI5w4nAecQJwXnB4='
    ], [
        'ภาษาไทย',
        'nCCcMpwpnDKcRJwXnCI='
    ], [
        'สวัสดี',
        'nCqcJ5wxnCqcFJw1'
    ], [
        '\u200B\u200C\u200D\u2060\uFEFF',
        'wAvADMANwGCD/X8='
    ], [
        'おはようございます',
        '4Ergb+EI4EbgVOBW4ETgfuBZ'
    ], [
        'こんにちは',
        '4FPhE+Br4GHgbw=='
    ], [
        'ひらがな',
        '4HLhCeBM4Go='
    ], [
        'カタカナ',
        '4SvhP+Er4Uo='
    ], [
        '世界',
        'gZwWgepM'
    ], [
        '世界',
        'gZwWgepM'
    ], [
        '中文',
        'gZwtgcsH'
    ], [
        '你好',
        'gZ5ggbJ9'
    ], [
        '北京',
        'gaYXgZ0s'
    ], [
        '台北',
        'gadwgaYX'
    ], [
        '您好',
        'gcEogbJ9'
    ], [
        '日本語',
        'gctlgc4sgpUe'
    ], [
        '汉字',
        'gdhJgbZX'
    ], [
        '漢字',
        'gd4igbZX'
    ], [
        '繁體中文',
        'gfxBgrVUgZwtgcsH'
    ], [
        '감사합니다',
        'gtgQg4Esg6ppguVIguVk'
    ], [
        '서울',
        'g4Icg404'
    ], [
        '안녕하세요',
        'g4pIguJVg6pYg4I4g40U'
    ], [
        '한국어',
        'g6pcgtptg4s0'
    ], [
        '\uFEFF',
        'g/1/'
    ], [
        '\uFEFFHello World',
        'g/1/SGVsbG8gV29ybGQ='
    ], [
        '\uFEFF\uFFFD\u200B\u0301\uE000mixed\uD800\uDC00chaos',
        'g/1/g/99wAuGAYPAAG1peGVkhIAAY2hhb3M='
    ], [
        '\uFEFF\uFFFE\uFEFF',
        'g/1/g/9+g/1/'
    ], [
        '\uFFFD',
        'g/99'
    ]]),

    _bigIntIterable = _kimBase64StringByBigIntMap.keys().toArray(),
    _bigIntIterableKimBase64String = _Buffer.concat(_kimBase64StringByBigIntMap.values().map(base64String => _Buffer.from(base64String, 'base64')).toArray()).toString('base64'),
    _numberIterable = _kimBase64StringByNumberMap.keys().toArray(),
    _numberIterableKimBase64String = _Buffer.concat(_kimBase64StringByNumberMap.values().map(base64String => _Buffer.from(base64String, 'base64')).toArray()).toString('base64');

_mocha.describe('kimEncoding', () => {
    _mocha.it('should export an object with a public interface', () => {
        _chai.expect(_kimEncoding).to.be.an('object');
        _chai.expect(_kimEncoding).to.have.property('decodeBigInt').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('decodeBigIntArray').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('decodeNumber').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('decodeNumberArray').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('decodeString').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('encode').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('encodeBigInt').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('encodeIterable').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('encodeNumber').that.is.a('function');
        _chai.expect(_kimEncoding).to.have.property('encodeString').that.is.a('function');
    });

    _mocha.it('should encode bigInts', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByBigIntMap) {
            const result = _kimEncoding.encodeBigInt(value);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(_Buffer.from(result).toString('base64')).to.equal(base64String);
        }
    });

    _mocha.it('should encode bigInt iterables', () => {
        const result = _kimEncoding.encodeIterable(_bigIntIterable);

        _chai.expect(result).to.be.a('uint8array');
        _chai.expect(_Buffer.from(result).toString('base64')).to.equal(_bigIntIterableKimBase64String);
    });

    _mocha.it('should encode numbers', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByNumberMap) {
            const result = _kimEncoding.encodeNumber(value);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(_Buffer.from(result).toString('base64')).to.equal(base64String);
        }
    });

    _mocha.it('should encode number iterables', () => {
        const result = _kimEncoding.encodeIterable(_numberIterable);

        _chai.expect(result).to.be.a('uint8array');
        _chai.expect(_Buffer.from(result).toString('base64')).to.equal(_numberIterableKimBase64String);
    });

    _mocha.it('should encode strings', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByStringMap) {
            const result = _kimEncoding.encodeString(value);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(_Buffer.from(result).toString('base64')).to.equal(base64String);
        }
    });

    _mocha.it('should encode properly based on input type', () => {
        {
            const result = _kimEncoding.encode(153n);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(Array.from(result)).to.deep.equal([
                129,
                25
            ]);
        }

        {
            const result = _kimEncoding.encode(153);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(Array.from(result)).to.deep.equal([
                129,
                25
            ]);
        }

        {
            const result = _kimEncoding.encode('153');

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(Array.from(result)).to.deep.equal([
                49,
                53,
                51
            ]);
        }

        {
            const result = _kimEncoding.encode([
                153n,
                153n
            ]);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(Array.from(result)).to.deep.equal([
                129,
                25,
                129,
                25
            ]);
        }

        {
            const result = _kimEncoding.encode([
                153,
                153
            ]);

            _chai.expect(result).to.be.a('uint8array');
            _chai.expect(Array.from(result)).to.deep.equal([
                129,
                25,
                129,
                25
            ]);
        }

        let thrown = false;

        try {
            _kimEncoding.encode(true);
        } catch {
            thrown = true;
        }

        _chai.expect(thrown).to.be.true;
    });

    _mocha.it('should fail to encode a non-integer', () => {
        let thrownCount = 0;

        try {
            _kimEncoding.encodeNumber(Math.PI);
        } catch {
            thrownCount += 1;
        }

        _chai.expect(thrownCount).to.equal(1);
    });

    _mocha.it('should fail to encode an invalid typed iterable item', () => {
        let thrownCount = 0;

        try {
            _kimEncoding.encodeIterable([
                1,
                2,
                '3'
            ]);
        } catch {
            thrownCount += 1;
        }

        _chai.expect(thrownCount).to.equal(1);
    });

    _mocha.it('should decode bigInts', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByBigIntMap) {
            const result = _kimEncoding.decodeBigInt(_Buffer.from(base64String, 'base64'));

            _chai.expect(result).to.be.a('bigint');
            _chai.expect(result).to.equal(value);
        }
    });

    _mocha.it('should decode bigInt arrays', () => {
        const result = _kimEncoding.decodeBigIntArray(_Buffer.from(_bigIntIterableKimBase64String, 'base64'));

        _chai.expect(result).to.be.an('array');
        _chai.expect(result).to.deep.equal(_bigIntIterable);
    });

    _mocha.it('should decode numbers', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByNumberMap) {
            const result = _kimEncoding.decodeNumber(_Buffer.from(base64String, 'base64'));

            _chai.expect(result).to.be.a('number');
            _chai.expect(result).to.equal(value);
        }
    });

    _mocha.it('should decode number arrays', () => {
        const result = _kimEncoding.decodeNumberArray(_Buffer.from(_numberIterableKimBase64String, 'base64'));

        _chai.expect(result).to.be.an('array');
        _chai.expect(result).to.deep.equal(_numberIterable);
    });

    _mocha.it('should decode strings', () => {
        for (const [
            value,
            base64String
        ] of _kimBase64StringByStringMap) {
            const result = _kimEncoding.decodeString(_Buffer.from(base64String, 'base64'));

            _chai.expect(result).to.be.a('string');
            _chai.expect(result).to.equal(value);
        }
    });

    _mocha.it('should be able to decode empty data', () => {
        const emptyData = new Uint8Array();

        _chai.expect(_kimEncoding.decodeBigInt(emptyData)).to.equal(0n);
        _chai.expect(_kimEncoding.decodeBigIntArray(emptyData)).to.deep.equal([]);
        _chai.expect(_kimEncoding.decodeNumber(emptyData)).to.equal(0);
        _chai.expect(_kimEncoding.decodeNumberArray(emptyData)).to.deep.equal([]);
        _chai.expect(_kimEncoding.decodeString(emptyData)).to.equal('');
    });

    _mocha.it('should be able to decode from a variety of formats', () => {
        _chai.expect(_kimEncoding.decodeBigInt(new Uint8Array([
            129,
            25
        ]))).to.equal(153n);
        _chai.expect(_kimEncoding.decodeBigInt(new Uint8Array([
            129,
            25
        ]).buffer)).to.equal(153n);
        _chai.expect(_kimEncoding.decodeBigInt(_Buffer.from([
            129,
            25
        ]))).to.equal(153n);
        _chai.expect(_kimEncoding.decodeBigInt([
            129,
            25
        ])).to.equal(153n);
    });

    _mocha.it('should fail to decode invalid negative encodings', () => {
        const invalidNegativeEncodings = [
            new Uint8Array([
                128
            ]),
            new Uint8Array([
                128,
                0
            ]),
            new Uint8Array([
                128,
                128
            ])
        ];

        let thrownCount = 0;

        for (const invalidNegativeEncoding of invalidNegativeEncodings) {
            try {
                _kimEncoding.decodeBigInt(invalidNegativeEncoding);
            } catch {
                thrownCount += 1;
            }
        }

        _chai.expect(thrownCount).to.equal(invalidNegativeEncodings.length);
    });

    _mocha.it('should fail to decode incomplete encodings', () => {
        let thrownCount = 0;

        try {
            _kimEncoding.decodeBigInt(new Uint8Array([
                129
            ]));
        } catch {
            thrownCount += 1;
        }

        try {
            _kimEncoding.decodeNumber(new Uint8Array([
                129
            ]));
        } catch {
            thrownCount += 1;
        }

        _chai.expect(thrownCount).to.equal(2);
    });

    _mocha.it('should fail to decode numbers that are too big', () => {
        let thrownCount = 0;

        try {
            _kimEncoding.decodeNumber(_kimEncoding.encodeBigInt(BigInt(Number.MAX_SAFE_INTEGER) * 2n));
        } catch {
            thrownCount += 1;
        }

        _chai.expect(thrownCount).to.equal(1);
    });
});
